# Requires skript-yaml & Skript-Mirror                                        #
# https://github.com/btk5h/skript-mirror/releases/latest to get skript-mirror #
# https://github.com/Sashie/skript-yaml/releases/latest to get skript-yaml    #

    
variables:
  betterCraftConfigPath = "plugins/betterCraft/config.yml"
  betterCraftPunishmentsPath = "plugins/betterCraft/punishments.yml"

# Plugin Exists Functionality
import:
  org.bukkit.Bukkit
  java.util.regex.Matcher
  java.util.regex.Pattern

condition plugin %string% exists:
  check:
    if Bukkit.getPluginManager().getPlugin(expression-1) is set:
      continue
condition plugin %string% doesn't exist:
  check:
    if Bukkit.getPluginManager().getPlugin(expression-1) isn't set:
      continue

condition plugin %string% is (1¦enabled|2¦disabled):
  check:
    if Bukkit.getPluginManager().isPluginEnabled(expression-1):
      if parse mark is 1:
        continue
    else:
      if parse mark is 2:
        continue

# betterCraftConfig>Functions
function reloadConf():
  load yaml {betterCraftConfigPath} as "config"
  load yaml {betterCraftPunishmentsPath} as "bans"
  set {prefix} to yaml value "prefix" from "config"

function saveConf():
  save yaml "config" with an indentation of 2
  set {version} to yaml value "DO_NOT_TOUCH.version.base" from "config"
  set {build} to yaml value "DO_NOT_TOUCH.version.build" from "config"

function toTimespan(x:text) :: timespan:
  if {_x} ends with "s":
    set {__time} to "seconds"
  if {_x} ends with "w":
    set {__time} to "weeks"
  if {_x} ends with "d":
    set {__time} to "days"
  if {_x} ends with "h":
    set {__time} to "hours"
  if {_x} ends with "m":
    set {__time} to "minutes"

  if {_x} ends with "mo":
    set {__time} to "months"
  if {_x} ends with "month":
    set {__time} to "months"
  if {_x} ends with "months":
    set {__time} to "months"

  if {_x} ends with "week":
    set {__time} to "weeks"
  if {_x} ends with "weeks":
    set {__time} to "weeks"

  if {_x} ends with "day":
    set {__time} to "days"
  if {_x} ends with "days":
    set {__time} to "days"

  if {_x} ends with "hrs":
    set {__time} to "hours"
  if {_x} ends with "hour":
    set {__time} to "hours"
  if {_x} ends with "hours":
    set {__time} to "hours"

  if {_x} ends with "min":
    set {__time} to "minutes"
  if {_x} ends with "minute":
    set {__time} to "minutes"
  if {_x} ends with "minutes":
    set {__time} to "minutes"

  if {_x} ends with "sec":
    set {__time} to "seconds"
  if {_x} ends with "second":
    set {__time} to "seconds"
  if {_x} ends with "seconds":
    set {__time} to "seconds"
  
  # replace "/\D/g" in {_x} with ""
  replace "[^0-9.-]" in {_x} with ""
  set {_s::*} to {_x} split at "/*[^0-9.-]/*"
  set {_x} to Pattern.compile("/*[^0-9.-]/*").matcher({_x}).replaceAll("")
  
  return "%{_x}% %{__time}%" parsed as timespan

# On Load
on load:
  wait 1 second
  if plugin "skript-yaml" doesn't exist:
    broadcast "skript-yaml couldn't be found on this server! Please get it from &b&nhttps://github.com/Sashie/skript-yaml/releases/latest&r and restart the server."
    exit
  
  # Set Version
  set {base} to "0.1.0"
  set {build} to 5

  # Config>Init
  if file {betterCraftPunishmentsPath} doesn't exist:
    create file {betterCraftPunishmentsPath}
  if file {betterCraftConfigPath} doesn't exist:
    create file {betterCraftConfigPath}

  reloadConf()

  set {previouslyLoadedVersion} to yaml value "DO_NOT_TOUCH.version.base" from "config"
  set {previouslyLoadedBuild} to yaml value "DO_NOT_TOUCH.version.build" from "config"

  if {build} is greater than {previouslyLoadedBuild}:
    broadcast "&aUpdated BetterCraft.SK (from %{previouslyLoadedVersion}% build %{previouslyLoadedBuild}% to %{base}% build %{build}%)"

  
  set yaml value "DO_NOT_TOUCH.version.base" from "config" to {base}
  set yaml value "DO_NOT_TOUCH.version.build" from "config" to {build}

  if {prefix} is not set:
    set yaml value "prefix" from "config" to ">"

  set {_defaultBanMsg} to yaml value "Punishments.DefaultBanMessage" from "config"
  if {_defaultBanMsg} is not set:
    set yaml value "Punishments.DefaultBanMessage" from "config" to "No Ban Message Specified."

  saveConf()
  reloadConf()

on unload:
  saveConf()

# Commands>Main
command /bettercraft [<text>]:
  aliases: /bcraft,/bc,/betterc,/bchelp
  usage: &c:Usage: &a/bc [subcommand]
  description: Displays everything this skript does 
  trigger:
    if arg-1 is not set:
      send "&cBetterCraft v%{version}%&r (Build: %{build}%)" to player
      send "&dCommands:" to player
      send "&b/bc" to player
      send "&a  Displays this message" to player
      send "&c  NO_PERMISSION_REQUIRED" to player
      send "&r" to player
      send "&b/bc save" to player
      send "&a  Saves the Config" to player
      send "&c  bettercraft.saveCfg" to player
      send "&r" to player
      send "&b/bc reload" to player
      send "&a  Reloads the Config" to player
      send "&c  bettercraft.reloadCfg" to player
      send "&r" to player
      send "&b/tp [Player] <Player> OR /tp [Player] <X> <Y> <Z>" to player
      send "&a  Teleports you or the first argument to the target" to player
      send "&c  bettercraft.tp" to player
      send "&r" to player
      send "&b/ban <Player> [Reason]" to player
      send "&a  Bans the User" to player
      send "&c  bettercraft.ban" to player
      send "&r" to player
      send "&b/sban <Player> [Reason]" to player
      send "&a  Silently bans the User" to player
      send "&c  bettercraft.ban" to player
    else if arg-1 is "save":
      if player has permission "bettercraft.saveCfg":
        saveConf()
        send "&aSaved Config!" to player
      else:
        send "&cNo Permission!"
    else if arg-1 is "reload":
      if player has permission "bettercraft.reloadCfg":
        reloadConf()
        send "&aReloaded Config!" to player
      else:
        send "&cNo Permission!"
    else:
      send "&cInvalid Subcommand!" to player

# Commands>Silent Ban
command /sban [<player> [<text>]]:
  aliases: /sb,/SilentBan,/SilentPermBan
  usage: &cUsage: &4/sban &a<Player> &b[Reason]
  description: Silently Bans the player
  permission: bettercraft.ban
  trigger:
    if arg-1 is not set:
      send "&c%{prefix}% &4User not specified."
    else:
      send "&a%{prefix}% &aBanned Player %arg-1%" to player

# Commands>Ban
command /ban [<player> [<text>]]:
  aliases: /PermBan
  usage: &cUsage: &4/ban &a<Player> &b[Reason]
  description: Bans the player
  permission: bettercraft.ban
  trigger:
    if arg-1 is not set:
      send "&c%{prefix}% &4User not specified."
    else:
      send "&a%{prefix}% &aBanned Player %arg-1%" to player

# Commands>TempBan
command /tban [<player> [<text> [<text>]]]:
  aliases: /tempBan,/tb
  usage: &cUsage: &4/tban &a<Player> &a<Time> &b[Reason]
  description: Temp Bans the player
  permission: bettercraft.tempban
  trigger:
    set {_defaultReason} to yaml value "Punishments.DefaultBanMessage" from "config"
    set {_usage} to "&c%{prefix}% &cUsage: &f/tb &c<Target> <Duration> &7[Reason (Defaults to &7%{_defaultReason}%&7)]"
    if arg-1 is not set:
      send "&c%{prefix}% &bUser not specified." to player
      send {_usage} to player
    else if arg-1 is not online:
      send "&c%{prefix}% &bUser not found." to player
      send {_usage} to player
    else if arg-2 is not set:
      send "&c%{prefix}% &bTimespan not specified." to player
      send {_usage} to player
    else:
      #  Set Ban Reason
      if arg-3 is set:
        set {_reason} to arg-3
      else:
        set {_reason} to {_defaultReason}

      #  Timestamp/Timespan
      set {_end} to now
      set {_span} to toTimespan(arg-2)
      if {_span} is not set:
        send "&c%{prefix}% &cInvalid Timespan."
        exit
      add {_span} to {_end}

      #  Success Message
      send "&a%{prefix}% &aBanned Player %arg-1%&a with the reason &b%{_reason}% &afor &c%{_span}% &b(ends at &c%{_end}%&b)" to player

# Commands>TP
command /tp [[<player>] <player>] [<number> <number> <number>]:
  aliases: /teleport
  usage: &cUsage: &4/tp &a[TargetPlayer] &d<DestinationPlayer> &cOR &4/tp &a[TargetPlayer] &d<X> <Y> <Z>
  description: Refined /tp
  permission: bettercraft.tp
  trigger:
    set {tpTarget} to player
    if arg-2 is set:
      set {tpTo} to arg-2
      if arg-1 is set:
        set {tpTarget} to arg-1
      if arg-3 is set:
        send "&c%{prefix}% &6Cannot call TP with Coordinates and 2 players!" to player
      
      
      teleport {tpTarget} to {tpTo}
      send "&a%{prefix}% &6Teleported &b%{tpTarget}%&6 to &b%{tpTo}%" to player
    else if arg-3 is set:
      if arg-4 is set:
        if arg-5 is set:
          set {x} to arg-3
          set {y} to arg-4
          set {z} to arg-5
          set {tpTo} to location({x}, {y}, {z})

          teleport {tpTarget} to {tpTo}
          send "&a%{prefix}% &6Teleported &b%{tpTarget}%&6 to &b%{tpTo}%" to player
        else:
          send "&c%{prefix}% &6Missing Coordinate Z from /tp." to player
      else:
        send "&c%{prefix}% &6Missing Coordinates Y,Z from /tp." to player
    else:
      send "&c%{prefix}% &6Cannot teleport with no target." to player
    set {x} to null
    set {y} to null
    set {z} to null
    set {tpTo} to null
    set {tpTarget} to null

